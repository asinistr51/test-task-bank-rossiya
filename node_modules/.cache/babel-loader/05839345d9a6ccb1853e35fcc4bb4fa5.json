{"ast":null,"code":"export const findIndexInDepositsList = (list, code) => {\n  const index = list.deposits.findIndex(deposit => deposit.code === code);\n  const paramList = list.deposits[index].param.map(value => value.period_from);\n};","map":{"version":3,"sources":["/home/as1nistr/test-task-bank-rossiya/src/utils/findIndexInDepositsList.ts"],"names":["findIndexInDepositsList","list","code","index","deposits","findIndex","deposit","paramList","param","map","value","period_from"],"mappings":"AAEA,OAAO,MAAMA,uBAAiC,GAAG,CAACC,IAAD,EAAqBC,IAArB,KAAsC;AACrF,QAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,CAAcC,SAAd,CAAyBC,OAAD,IAA0BA,OAAO,CAACJ,IAAR,KAAiBA,IAAnE,CAAd;AACA,QAAMK,SAAS,GAAGN,IAAI,CAACG,QAAL,CAAcD,KAAd,EAAqBK,KAArB,CAA2BC,GAA3B,CAA+BC,KAAK,IAAIA,KAAK,CAACC,WAA9C,CAAlB;AACD,CAHM","sourcesContent":["import {DepositsList, DepositItem} from '../interfaces/interfaces'\nimport {defineRange} from './calculator'\nexport const findIndexInDepositsList: Function = (list: DepositsList, code: string) => {\n  const index = list.deposits.findIndex((deposit: DepositItem) => deposit.code === code)\n  const paramList = list.deposits[index].param.map(value => value.period_from)\n}\n\n"]},"metadata":{},"sourceType":"module"}